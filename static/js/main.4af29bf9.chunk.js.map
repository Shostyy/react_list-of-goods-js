{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortBy","setSortBy","isReverse","setIsReverse","preparedGoods","goods","sortByType","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","button","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SAmChB,IAAMC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAGMC,EAtCR,SAA0BC,EAAOC,EAAYJ,GAC3C,IAAIE,EAAa,YAAOC,GAExB,OAAIC,EACKF,EAAcG,MAAK,SAACC,EAAOC,GAChC,OAAQH,GACN,KAAKV,EACH,OAAOM,EACHO,EAAMC,cAAcF,GACpBA,EAAME,cAAcD,GAC1B,KAAKZ,EACH,OAAIW,EAAMG,SAAWF,EAAME,OAClBT,EACHO,EAAMC,cAAcF,GACpBA,EAAME,cAAcD,GAGnBP,EACHO,EAAME,OAASH,EAAMG,OACrBH,EAAMG,OAASF,EAAME,OAC3B,QACE,OAAO,UAKXT,IACFE,EAAgB,UAAIT,GAAiBiB,WAGhCR,GAQeS,CAFX,UAAOlB,GAE4BK,EAAQE,GAEtD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CACZC,QAAQ,EACR,WAAW,EACX,WAAYjB,IAAWJ,IAEzBsB,QAAS,kBAAMjB,EAAUL,IAP3B,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,CACZC,QAAQ,EACR,cAAc,EACd,WAAYjB,IAAWH,IAEzBqB,QAAS,kBAAMjB,EAAUJ,IAP3B,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,CACZC,QAAQ,EACR,cAAc,EACd,YAAaf,IAEfgB,QAAS,kBAAMf,GAAcD,IAP/B,sBAYEA,KAAeF,IACf,wBACEe,KAAK,SACLD,UAAU,4BACVI,QAAS,WACPjB,EAAU,IACVE,GAAa,IALjB,sBAcJ,6BACGC,EAAce,KAAI,SAAAC,GAAI,OACrB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCpHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4af29bf9.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortByType, isReverse) {\n  let preparedGoods = [...goods];\n\n  if (sortByType) {\n    return preparedGoods.sort((good1, good2) => {\n      switch (sortByType) {\n        case SORT_BY_ALPHABET:\n          return isReverse\n            ? good2.localeCompare(good1)\n            : good1.localeCompare(good2);\n        case SORT_BY_LENGTH:\n          if (good1.length === good2.length) {\n            return isReverse\n              ? good2.localeCompare(good1)\n              : good1.localeCompare(good2);\n          }\n\n          return isReverse\n            ? good2.length - good1.length\n            : good1.length - good2.length;\n        default:\n          return null;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preparedGoods = [...goodsFromServer].reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  const goods = [...goodsFromServer];\n\n  const preparedGoods = getPreparedGoods(goods, sortBy, isReverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn({\n            button: true,\n            'is-info': true,\n            'is-light': sortBy !== SORT_BY_ALPHABET,\n          })}\n          onClick={() => setSortBy(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            button: true,\n            'is-success': true,\n            'is-light': sortBy !== SORT_BY_LENGTH,\n          })}\n          onClick={() => setSortBy(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            button: true,\n            'is-warning': true,\n            'is-light': !isReverse,\n          })}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(isReverse || !!sortBy) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortBy('');\n              setIsReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {preparedGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}